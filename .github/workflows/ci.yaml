on:
  push:
    branches:
      - arc-demo
env:
  REGISTRY_NAME: shiguptacr

  DEV_CLUSTER_NAME: arcDevAKS
  STAGING_CLUSTER_NAME: arcStagingAKS
  PROD_CLUSTER_NAME: arcProdAKS

  DEV_CLUSTER_RESOURCE_GROUP: arc-demo-dev
  STAGING_CLUSTER_RESOURCE_GROUP: arc-demo-staging
  PROD_CLUSTER_RESOURCE_GROUP: arc-demo-prod

  IMAGE_SECRET: demo-secret
  NAMESPACE: demo
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master    
      
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.DEV_REGISTRY_USERNAME }} 
        password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
          
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
  
  deploy-to-dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master    
      
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDS_TEST }}'
        resource-group: 'shigupt'
        cluster-name: 'shigupt-clus'      
        
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -    
        
    - uses: azure/k8s-create-secret@releases/v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.DEV_REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
        secret-name: ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
          
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
      
